CONSIDER:

all credential verification is done with ajax

because of this we don't know the user's socket id

which means for incoming socket.io calls, we don't know who they are coming from

PROPOSAL:

keep all credential verification on ajax

after credential verification completes,
make a socket.io call
receive the socket.io call
find user in mongo based on document.cookie
if user exists
save socket.id to that user

use socket.id for all future socket.io calls to identify user

OTHER PROBLEM:

if logging in can be done using the mini dash,

any website can have a javascript key logger that steals login credentials

SOLUTION:

initializing the bookmarklet invokes a popup (graffidia.com/remote_login)

cookie checking is done here

if the cookie is bad, the user logs in using the popup

then popup gets closed and the same socket.io verification call from before is made to save the socket.id to the user

OTHER PROBLEM:

currently, logging in from the mini dash makes an unsecure GET request to graffidia.com/login

by implementing popup login, this issue becomes moot